@using FabricCutter.UI.Logic
@using FabricCutter.UI.Logic.Events
@using FabricCutter.UI.Service
@inject ISliderViewModel _viewModel
<div class="slider-container">

	<div class="slider-content">
		<div class="slider-header"></div>
		<CursorPositionComponent></CursorPositionComponent>
		@if (_viewModel.Markers is not null)
		{
			@foreach (var marker in _viewModel.Markers)
			{
				<MarkersComponent Marker=@(marker as Marker)></MarkersComponent>
			}
		}
	</div>
	<input type="range" class="slider-range" min="0" max=@_viewModel.SliderLenght @bind-value=@_viewModel.PointerPosition @oninput=@_viewModel.OnPositionPointerChange />
	@* @onchange=@_viewModel.OnPositionPointerChange *@
</div>




@code {

	protected override void OnInitialized()
	{
		_viewModel.StateHasChanged= StateHasChanged;
		
		
		base.OnInitialized();
	}

}
