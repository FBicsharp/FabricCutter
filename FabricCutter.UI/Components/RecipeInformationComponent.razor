@using FabricCutter.UI.Logic
<div class="length-component-separator"></div>
<div class="length-component-up">
	<div class="row">
		<div class="label">Total Length:</div>
		<div class="value">@RecipeInformation.TotalLenght</div>
	</div>
	<div class="row">
		<div class="label">Markers Length:</div>
		<div class="value">@RecipeInformation.MarkersLenght</div>
	</div>
	<div class="row">
		<div class="label">N° Splices:</div>
		<div class="value">@RecipeInformation.SplicesNumber</div>
	</div>
	<div class="row">
		<div class="label">N° Markers:</div>
		<div class="value">@RecipeInformation.MarkersNumber</div>
	</div>
	<div class="row">
		<div class="label">Absolute Position:</div>
		<div class="value">@RecipeInformation.AbsolutePosition</div>
	</div>
</div>
<div class="length-component-separator-down"></div>

@code {
	[Parameter]
	public RecipeInformation RecipeInformation { get; set; }

	protected override void OnInitialized()
	{

		var slider = new Slider(5000);

		RecipeInformation = new RecipeInformation( slider);
	}
}
<style>
	.length-component-separator-up {
		border-top: 5px solid gray;		
		width: 100%;
		margin-top: 10px ;
	}

	.length-component-separator-down {
		border-top: 5px solid gray;
		width: 100%;
		margin-bottom: 10px;
	}
	.length-component {
		padding: 10px;
		margin-bottom: 20px;
		display: inline-flex;
		flex-direction: row;
		justify-content:space-between;
		width: 100%;
	}

	.row {
		display: inline-block;
		align-items: center;
		margin: 10px;
	}

	.label {
		width: 100px;
		color: black;
		font-size: 1rem;
		font-weight: bold;
		display: inline;
		justify-content: center;
		align-items: center;
	}

	.value {
		flex: 1;
		text-align: center;
		color: gray;
		font-size: 1rem;
		font-weight: bold;
	}

	.position {
		display: inline-block;
		/* width: 50px; */
		height: 30px;
		line-height: 30px;
		text-align: center;
		border: 1px solid black;
		margin-right: 10px;
	}
</style>